name: Docker Build

on:
  push:
    branches:
      - master
  pull_request:
  release:
    types:
      - created

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: crazy-max/ghaction-docker-buildx@v3

      - name: Prepare
        id: prepare
        run: |
          DOCKER_IMAGE=robertslando/zwave2mqtt
          DOCKER_PLATFORMS=linux/arm64,linux/amd64,linux/arm/v6,linux/arm/v7,linux/386

          echo ::set-output name=docker_image::${DOCKER_IMAGE}
          echo ::set-output name=docker_platforms::${DOCKER_PLATFORMS} \

      - name: Just build on PR
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          docker buildx build \
          -f docker/Dockerfile \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          -t ${{ steps.prepare.outputs.docker_image }}:dev \
          .

      - name: Login to dockerhub
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          docker login --username $DOCKER_USERNAME --password $DOCKER_PASSWORD
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dev
        if: ${{ github.ref == 'refs/heads/master'}}
        run: |
          docker buildx build \
          -f docker/Dockerfile \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          -t ${{ steps.prepare.outputs.docker_image }}:dev \
          --push \
          .

      - name: Latest & tag
        if: ${{ github.event_name == 'release' }}
        run: |
          docker buildx build \
          -f docker/Dockerfile \
          --platform ${{ steps.prepare.outputs.docker_platforms }} \
          -t ${{ steps.prepare.outputs.docker_image }}:$(echo ${GITHUB_REF} | sed "s/refs\/tags\/v//") \
          -t ${{ steps.prepare.outputs.docker_image }}:latest \
          --push \
          .
